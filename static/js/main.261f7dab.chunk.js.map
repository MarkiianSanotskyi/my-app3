{"version":3,"sources":["assets/boat.jpg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","About","Contact","NoMatch","Layout","props","Container","children","Styles","styled","div","_templateObject","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","react_router_dom","to","Jumbotron_templateObject","boatImage","Jumbotron","Jumbotron_Styles","es_Jumbotron","fluid","App","Fragment","NavigationBar_NavigationBar","Jumbotron_Jumbotron","Layout_Layout","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.261f7dab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boat.d3221ff8.jpg\";","import React from 'react'\n\nexport const Home = () => (\n\n\t\t<div>\n\t\t\t<h2>Hello World</h2>\n\t\t\t<p>Home Page</p>\n\t\t</div>\n\t\t);\n","import React from 'react'\n\nexport const About = () => (\n\n\t\t<div>\n\t\t\t<h2>Hello World</h2>\n\t\t\t<p>About Page</p>\n\t\t</div>\n\t\t);\n","import React from 'react'\n\nexport const Contact = () => (\n\n\t\t<div>\n\t\t\t<h2>Hello World</h2>\n\t\t\t<p>Contact Page</p>\n\t\t</div>\n\t\t);\n","import React from 'react'\n\nexport const NoMatch = () => (\n\n\t\t<div>\n\t\t\t<h2>No Match</h2>\n\t\t\t\n\t\t</div>\n\t\t);\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport const Layout = (props) => (\n\t<Container>\n\t\t{props.children}\n\t</Container>\n)\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: #222;\n  }\n  a, .navbar-brand, .navbar-nav .nav-link {\n    color: #bbb;\n    &:hover {\n      color: white;\n    }\n  }\n`;\n\nexport const NavigationBar = () => (\n  <Styles>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">Code Life</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/\">Home</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/about\">About</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Styles >\n)","import React from 'react';\nimport { Jumbotron as Jumbo, Container} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport boatImage from '../assets/boat.jpg';\n\n\nconst Styles = styled.div`\n  .jumbo {\n    background: url(${boatImage}) no-repeat 90% 90%;\n    background-size: cover;\n    color: #efefef;\n    height: 200px;\n    position: relative;\n    z-index: -2;\n  }\n  .overlay {\n    background-color: #000;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`;\n\nexport  const Jumbotron = () => (\n\t<Styles>\n\t\t<Jumbo fluid className=\"jumbo\">\n\t\t\t<div className=\"overlay\"></div>\n\t\t\t<Container>\n\t\t\t\t<h1>Welcome</h1>\n\t\t\t\t<p>Просто За*бало))</p>\n\t\t\t</Container>\n\t\t</Jumbo>\n\t</Styles>\n\t)","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Contact } from './Contact';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { NavigationBar } from './components/NavigationBar';\nimport { Jumbotron } from './components/Jumbotron';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <NavigationBar />\n          <Jumbotron />\n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}